(function() {var implementors = {};
implementors["panorama"] = [{"text":"impl RefUnwindSafe for Config","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MailAccountConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImapConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TlsMethod","synthetic":true,"types":[]},{"text":"impl&lt;S, S2&gt; RefUnwindSafe for LoopExit&lt;S, S2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;S2: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; !RefUnwindSafe for CommandManager&lt;S&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CommandManager&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MailCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rect","synthetic":true,"types":[]}];
implementors["panorama_imap"] = [{"text":"impl RefUnwindSafe for NoParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Params","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Messages","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Modifiers","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CommandBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SelectCommand&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for FetchCommand&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !RefUnwindSafe for Client&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for GreetingHandler","synthetic":true,"types":[]},{"text":"impl&lt;'a, C&gt; !RefUnwindSafe for ExecHandle&lt;'a, C&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientNotConnected","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientNotConnectedBuilder","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientUnauthenticated","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientUnauthenticatedUnencrypted","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientUnauthenticatedEncrypted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyStructParser&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for EntryParseStage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Response","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Capability","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResponseCode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Request&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrMacro","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Response&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ResponseCode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UidSetMember","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatusAttribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Metadata","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MailboxDatum&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Capability&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageSection","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SectionPath","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AttributeValue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyStructure&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyContentCommon&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyContentSinglePart&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ContentType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ContentDisposition&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ContentEncoding&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyExtension&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Envelope&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Address&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for State","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyFields&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyExt1Part&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for BodyExtMPart&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["panorama_strings"] = [{"text":"impl&lt;T&gt; RefUnwindSafe for Store&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Entry&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()